name: BuildWithCmake

on:
  push:
    branches: [ "master", "actions" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CONAN_REVISIONS_ENABLED: 1

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Install Ninja
      id: ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Install dependencies with Conan
      run: | 
         echo "${{ steps.conan.outputs.version }}"
         mkdir cd ${{github.workspace}}/build && cd ${{github.workspace}}/build && conan install .. --build=missing
    - name: Configure CMake
      run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -G Ninja -DCONAN_TOOLCHAIN_FOLDER:STRING=${{github.workspace}}/build -DCMAKE_EXPORT_COMPILE_COMMANDS=True

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
